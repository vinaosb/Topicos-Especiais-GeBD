@page "/censoescola"
@page "/censoescola/{text}"

@using API.SQL.Models
@inject Data.CensoEscolasService CEService

<h1>CensoEscola</h1>

@if (censosEscolas == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>Nome da Entidade</th>
				<th>Ano</th>
				<th>Telefone</th>
				<th>Email</th>
				<th>Rede</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var modelItem in censosEscolas)
			{
				<tr>
					<td>@modelItem.CodEntidadeNavigation.Nome</td>
					<td>@modelItem.Ano</td>
					<td>@getTel(modelItem)</td>
					<td>@modelItem.CodEntidadeNavigation.CorreioEletronico.FirstOrDefault()</td>
					<td>@modelItem.Rede @if (@modelItem.Rede == "Privada"){ - @getCategoria(@modelItem.CodEntidade, @modelItem.Ano) }</td>
				</tr>
			}
		</tbody>
	</table>
}


@code {
	API.SQL.Models.CensoEscola[] censosEscolas;
	[Parameter]
	public string Text { get; set; }

	protected override async Task OnInitializedAsync()
	{
		censosEscolas = await CEService.GetAsync(Text);
	}

	private string getCategoria(string codEscola,string ano)
	{
		if(await CEService.GetAsync(Text)){
		
		}
	}

	private string getTel(API.SQL.Models.CensoEscola ce)
	{
		return ce.CodEntidadeNavigation.Telefone.FirstOrDefault().Ddd.ToString() + ce.CodEntidadeNavigation.Telefone.FirstOrDefault().Numero.ToString();
	}
}
